<feature_specification>
    <business_requirements>
        <user_story>
            As a business analyst, I want to upload and manage multiple CSV files so that I can quickly
            switch between different data sets and remove unnecessary data, enabling more flexible and
            efficient analysis.
        </user_story>

        <acceptance_criteria>
            The user can upload multiple CSV files at once
            All uploaded files are listed by name
            The user can select any listed file to update the displayed dashboard data
            The user can delete any uploaded file, removing it from the list
            The dashboard updates automatically upon changing the selected file
        </acceptance_criteria>

        <business_rules>
            Only CSV files are allowed
            Display a clear indication of the currently selected file
            Once deleted, a file should not be recoverable in the current session
            If no file is selected, the dashboard remains empty or shows a placeholder message
        </business_rules>
    </business_requirements>

    <technical_requirements>
        <react_implementation>
            <component_structure>
                Holds overall state, passes selected file data to Dashboard
                Handles input of multiple files, parsing, and state updates
                Displays uploaded files, selection state, and delete actions
                Renders metrics and data table for the currently selected file
            </component_structure>
            <state_management>
                <hooks>
                    <hook>useState for 'files' array and 'selectedFileId'</hook>
                    <hook>useMemo to cache parsed CSV data and derived metrics</hook>
                    <hook>useCallback for stable handlers (upload, select, delete)</hook>
                </hooks>
            </state_management>
            <props>
                <prop>Callback for uploaded files</prop>
                <prop>List of uploaded files</prop>
                <prop>Currently selected file ID</prop>
                <prop>Select file callback</prop>
                <prop>Delete file callback</prop>
                <prop>Parsed CSV data</prop>
                <prop>Calculated metrics object</prop>
            </props>
        </react_implementation>
        <tailwind_css>
            <layout>
                <container>flex flex-col md:flex-row p-4</container>
                <file_list_section>w-full md:w-1/4 border-r border-gray-200 p-2</file_list_section>
                <dashboard_section>w-full md:w-3/4 p-4</dashboard_section>
            </layout>
            <responsive_design>
                <medium_screen>Use md: prefixes to adjust layout (e.g. md:w-1/4, md:w-3/4)</medium_screen>
                <small_screen>Stack file list above dashboard in smaller screens</small_screen>
            </responsive_design>
            <custom_styling>
                <selected_file>bg-blue-100 for highlighting selected file</selected_file>
                <delete_button>text-red-500 hover:text-red-700 for delete action</delete_button>
                <upload_button>bg-blue-500 text-white hover:bg-blue-600 rounded px-4 py-2</upload_button>
            </custom_styling>
        </tailwind_css>

        <api_data>
            <requirement>Parse CSV client-side</requirement>
            <requirement>Store parsed data in state with file ID references</requirement>
        </api_data>

        <performance>
            <optimization>Parse each file once, store results in memory</optimization>
            <optimization>useMemo and useCallback to reduce unnecessary re-renders</optimization>
            <optimization>Render large tables efficiently (e.g. virtualization if needed)</optimization>
        </performance>
    </technical_requirements>

    <validation>
        <test_scenarios>
            <scenario>Upload multiple CSV files, verify they appear in the file list</scenario>
            <scenario>Select a CSV file, verify dashboard displays correct data</scenario>
            <scenario>Delete a CSV file, verify it is removed and dashboard updates</scenario>
            <scenario>Upload a non-CSV file, verify error handling</scenario>
            <scenario>Switch between files multiple times, verify performance and correctness</scenario>
        </test_scenarios>
        <edge_cases>
            <case>No files uploaded: dashboard shows placeholder or remains empty</case>
            <case>Deleting the currently selected file clears the dashboard</case>
            <case>Very large CSV file should not cause UI freeze</case>
        </edge_cases>
        <performance_metrics>
            <metric>Initial load under 2 seconds</metric>
            <metric>File switch updates under 500ms</metric>
            <metric>Large files parsed asynchronously if needed</metric>
        </performance_metrics>
    </validation>
</feature_specification>